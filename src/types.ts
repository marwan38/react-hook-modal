import React from "react";
export interface IModalProps {
  /** Closes the modal. Passed down by the provider */
  close: () => void;
  /** Unique key generated by the context. Used to fetch state from within the modal */
  stateKey: string;
}

export interface IModalActions<S> {
  open: () => void;
  close: () => void;
  setState: (callback: (draftState: S) => void) => void;
  cleanUp: () => void;
}

export interface IModalContext<
  P,
  S
> {
  /** Adds a modal component into the Modal Context */
  add: (
    stateKey: string,
    modal: React.FC<any>,
    props?: P,
    state?: S
  ) => IModalActions<S>;
  modalsState: { [key: string]: S | any };
}

export interface IModalProviderProps {
  children: React.ReactNode;
  /** The portals root element */
  rootElement?: Element;
}
export interface IModalPortalProps
  extends Required<Pick<IModalProviderProps, "rootElement">> {
  modal: React.ReactElement;
}
